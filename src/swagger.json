{
  "openapi": "3.0.0",
  "info": {
    "title": "HCI Papers Search API",
    "description": "This API was built to search articles.",
    "contact": {
      "email": "lacerdagomes95@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local test environment"
    }
  ],
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "User login.",
        "description": "Route responsible for validating credentials and generating JWT.",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartialUser"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "user@email.com",
                    "password": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid user credentials.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "500": {
            "description": "Error while processing data.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "200": {
            "description": "User found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "summary": "User signup.",
        "description": "Route responsible for creating new user.",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserWPassword"
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "user@email.com",
                    "password": "password123",
                    "firstName": "User",
                    "lastName": "Name"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Invalid user credentials.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "500": {
            "description": "Error while processing data.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "200": {
            "description": "Success."
          }
        }
      }
    },
    "/api/elastic/search/keywords": {
      "get": {
        "summary": "Keywords search.",
        "description": "Route responsible for searching keywords.",
        "tags": ["Elastic"],
        "parameters": [{
          "in": "query",
          "name": "kw",
          "description": "Word to search for.",
          "required": true
        }],
        "responses": {
          "403": {
            "description": "Invalid token.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "500": {
            "description": "Error while searching for suggestions.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "200": {
            "description": "Success.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FoundKeywords"
              }
            }}
          }
        }
      }
    },
    "/api/elastic/setup": {
      "post": {
        "summary": "Initial cluster configuration.",
        "description": "Route responsible for configuring mapping, indexes and cloning DB's.",
        "tags": ["Elastic"],
        "responses": {
          "403": {
            "description": "Invalid token.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "500": {
            "description": "Error while searching for suggestions.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "200": {
            "description": "Success."
          }
        }
      }
    },
    "/api/elastic/": {
      "delete": {
        "summary": "Deletes all indexes.",
        "description": "Route responsible for deleting all data from cluster. SHould only be used on Elastic locally.",
        "tags": ["Elastic"],
        "responses": {
          "403": {
            "description": "Invalid token.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "500": {
            "description": "Error while searching for suggestions.",
            "content": { 
              "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServerError"
              }
            }}
          },
          "200": {
            "description": "Success."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PartialUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "User": {
        "type":"object",
        "properties": {
          "email": {"type":"string"},
          "firstName": {"type":"string"},
          "lastName": {"type":"string"},
          "id": {"type":"integer"}
        }
      },
      "FoundKeywords": {
        "type":"array",
        "items": {
          "type": "string",
          "example": [
            "augmentative and alternative communication",
            "alternative and augmentative communication",
            "augmented communication",
            "augmented cognition",
            "augmented learning",
            "augmented reality",
            "mobile augmented reality",
            "tangible augmented reality",
            "automated annotation"
          ]
        }
      },
      "UserWPassword": {
        "type":"object",
        "properties": {
          "email": {"type":"string"},
          "firstName": {"type":"string"},
          "lastName": {"type":"string"},
          "password": {"type":"string"},
          "id": {"type":"integer"}
        }
      },
      "ServerError": {
        "type": "string"
      }
    }
  }
}